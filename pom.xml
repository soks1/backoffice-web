<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.penta</groupId>
	<artifactId>backoffice-web</artifactId>
	<packaging>war</packaging>
	<version>1.0.0</version>
	<name>backoffice Maven Web</name>

	<properties>
		<java-version>1.7</java-version>
		<org.springframework-version>3.2.12.RELEASE</org.springframework-version>
		<org.aspectj-version>1.7.4</org.aspectj-version>
		<logback.version>1.1.2</logback.version>
		<slf4j.version>1.7.7</slf4j.version>
	</properties>
	
	<!--
		local/개발/상용 설정파일 분기를 위한 실행 명령어 Package 방법 : 프로젝트 마우스
		오른쪽 버튼 > Run AS > Run configurations... > Maven Build > New Base directory -> ${workspace_loc:/back_office} 선언
		Goals -> package -P {id} 선언 // EX) package -P real
		Common Tab 이동 Encoding 부분을 other로 선택 후 UTF-8선택 저장 하위 버튼 중 run 클릭시 메이븐 빌드 실행 됨!
	-->
	<profiles>
		<!-- local -->
		<profile>
			<id>local</id>
			<!-- Default 설정 -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<deployTarget>local</deployTarget>
			</properties>
		</profile>
		<!-- 개발 서버 -->
		<profile>
			<id>development</id>
			<properties>
				<deployTarget>development</deployTarget>
			</properties>
		</profile>

		<!-- 운영 서버 -->
		<profile>
			<id>product</id>
			<properties>
				<deployTarget>product</deployTarget>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>mesir-repo</id>
			<url>http://mesir.googlecode.com/svn/trunk/mavenrepo</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>mesir-repo</id>
			<url>http://mesir.googlecode.com/svn/trunk/mavenrepo</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<!-- <scope>runtime</scope> -->
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		
		<!--
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		-->

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>

		<!-- commons -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- jackson -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
			<type>jar</type>
			<optional>false</optional>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.6</version>
		</dependency>

		<!-- 
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc14</artifactId>
			<version>10.2.0.4.0</version>
			<scope>test</scope>
		</dependency>
		-->
		
	    <!-- WEB-INF/lib 경로에 있는 JAR파일을 아래등록된 그룹아이디와 아티팩트아이디로  Maven Local Repository에 수동 등록 필요 
		ex)mvn install:install-file -Dfile={개발자 local 프로젝트 경로}\라이브러리.jar -DgroupId=그룹아이디 -DartifactId=아티팩트아이디 -Dversion=1.0 -Dpackaging=jar -DgeneratePom=true
		
		// 2015.11.11 SSO 라이브러리 추가
		mvn install:install-file -Dfile=D:\projects\lmscp_ssp_server\src\main\webapp\WEB-INF\lib\nsso-agent.jar -DgroupId=com.nets.sso.nsso-agent -DartifactId=nsso-agent -Dversion=1.0 -Dpackaging=jar -DgeneratePom=true
		-->
		
		<!-- 
		<dependency>
			<groupId>com.nets</groupId>
			<artifactId>sso.nsso-agent</artifactId>
			<version>1.0.0</version>
		</dependency>
		-->
	</dependencies>
	<build>
		<finalName>lmscp_bo_server</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
<!-- 
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
-->
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<mainClass>org.test.int1.Main</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/profiles/context/${deployTarget}</directory>
							<targetPath>WEB-INF/classes</targetPath>
						</resource>
						<resource>
							<directory>src/main/profiles/resources/${deployTarget}</directory>
							<targetPath>resources</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/</path>
					<port>8080</port>
					<charset>UTF-8</charset>
					<uriEncoding>UTF-8</uriEncoding>
					<contextFile>${project.basedir}/src/test/resources/context.xml</contextFile>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.oracle</groupId>
						<artifactId>ojdbc14</artifactId>
						<version>10.2.0.4.0</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>
