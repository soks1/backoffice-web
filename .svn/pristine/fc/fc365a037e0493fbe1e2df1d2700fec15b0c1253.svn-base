<%@page import="com.penta.backoffice.base.util.LangUtil"%>
<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="java.util.Enumeration"%>
<section id="widget-grid" class="">
	<div class="row">
		<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
			<div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-0" data-widget-editbutton="false" data-widget-deletebutton="false">
				<header>
					<span class="widget-icon"> <i class="fa fa-search"></i> </span>
					<h2> 조회 조건 </h2>
				</header>
				<div>
					<div class="jarviswidget-editbox"></div>
					<div class="widget-body">
						<form id="frmSearch" class="form-horizontal">
							<fieldset>
								<div class="form-group">
									<label class="col-md-1 control-label">이벤트ID</label>
									<div class="col-md-3">
										<input class="form-control" type="text" name="l_event_id" />
									</div>
									
									<label class="col-md-1 control-label">이벤트명</label>
									<div class="col-md-3">
										<input class="form-control" type="text" name="l_evnt_title" />
									</div>
									
									<label class="col-md-1 control-label">이벤트기간</label>
									<div class="col-md-3half">
										<div class="input-group">
											<input class="form-control datepicker pr12 tac" type="text" id="prgs_start_date" name="prgs_start_date" placeholder="시작일" data-date-format='yyyyMMdd' data-dateformat='yy-mm-dd'>
											<span class="input-group-addon"><i class="fa fa-calendar"></i></span>
										</div>
									</div>
									<div class="col-md-3half">
										<div class="input-group">
											<input class="form-control datepicker pr12 tac" type="text" id="prgs_end_date" name="prgs_end_date" placeholder="종료일" data-date-format='yyyyMMdd' data-dateformat='yy-mm-dd'>
											<span class="input-group-addon"><i class="fa fa-calendar"></i></span>
										</div>
									</div>
								</div>
								
								<div class="form-group">
									<label class="col-md-1 control-label">고객군ID</label>
									<div class="col-md-3">
										<input class="form-control" type="text" name="lst_custgp_id">
									</div>
									
									<label class="col-md-1 control-label">고객군명</label>
									<div class="col-md-3">
										<input class="form-control" type="text" name="lst_custgp_nm">
									</div>
								</div>
								
								<div class="form-group">
									<label class="col-md-1 control-label">구분</label>
									<div class="col-md-3">
										<select class="form-control" name="target_type">
											<option value="">전체</option>
										</select>
									</div>
									<label class="col-md-1 control-label">진행상태</label>
									<div class="col-md-3">
										<select class="form-control" name="prgs_sts_cd">
											<option value="">전체</option>
										</select>
									</div>
									<label class="col-md-1 control-label">승인상태</label>
									<div class="col-md-3">
										<select class="form-control" name="aprv_sts_cd">
											<option value="">전체</option>
										</select>
									</div>
								</div>
							</fieldset>
							
							<div class="form-actions mt0">
								<div class="row">
									<div class="col-md-12">
										<a href="javascript:void(0)" id="btn_search" onclick="f_eventSearch();" class="btn btn-success"><i class="fa fa-search"></i> 조회 </a>
									</div>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
		</article>
	</div>
	<div class="row">
		<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
			<div class="jarviswidget jarviswidget-color-darken" id="wid-id-1" data-widget-editbutton="false" data-widget-deletebutton="false">
				<header>
					<span class="widget-icon"> <i class="fa fa-table"></i> </span>
					<h2> 이벤트 목록 </h2>
				</header>
				<div>
					<div class="jarviswidget-editbox"></div>
					<div id="target_event_grid" class="widget-body no-padding">
						<table id="event_grid"></table>
						<div id="event_grid_page"></div>
					</div>
				</div>
			</div>
		</article>
	</div>
</section>
<form id="frmKeepData">
<%
	Enumeration<?> e = request.getParameterNames();
	while(e.hasMoreElements()){
		String key = (String)e.nextElement();
		String values[] = request.getParameterValues(key);
		for(int i = 0; i < values.length; i++) {
			out.println("<input type=\"hidden\" name=\""+LangUtil.replaceInjection(key)+"\" value=\""+LangUtil.replaceInjection(values[i])+"\" />\n");	
		}
	}
%>
</form>
<script type="text/javascript">


/* ============================================================================================
/* 페이지 정보 설정
/* --------------------------------------------------------------------------------------------
/* 초기 설정 및 필요 UI 컴포넌트 셋팅
/* ============================================================================================ */
var pagefunction = function() {

	f_ajaxLpotEventTypeCode($("select[name=target_type]"));
	// 초기데이터 로드 : 진행상태
	f_ajaxCommonCode({
		target:"select[name=prgs_sts_cd]", 
		cd_divn_id: "PRGS_STS_CD",
		codeId : "",
		fnSuccess : ""
	});
	// 미정상태 제거
	$("select[name=prgs_sts_cd]").find('option[value=UNSET]').remove();
	// 초기데이터 로드 : 승인상태
	f_ajaxApprovalStatusCode($("select[name=aprv_sts_cd]"));
	
	loadScript("${pageContext.request.contextPath}/resources/js/plugin/jqgrid/jquery.jqGrid.min.js", run_jqgrid_function);

	function run_jqgrid_function() {
		
		var pageWidth = $("#event_grid").parent().width() - 100;

		jQuery("#event_grid").jqGrid({
			url : api_url+"/backoffice/lpot/event/list",
			mtype: 'GET',
			datatype : "json",
			colNames : ['No.', '이벤트ID', '구분', '이벤트명', '고객군명', '고객군ID', '연결 ZONE수', 'WAKE-UP', '시작일', '종료일', '승인상태', '진행상태', '등록일', '승인상태 코드'],
			colModel : [
				{ name : 'rnum', 					index : 'rnum',		 				align : "center",	sortable : false, 	width : (pageWidth*(3/100)) 	},
				{ name : 'l_event_id', 				index : 'l_event_id', 				align : "center",	sortable : false, 	width : (pageWidth*(12/100))	},
				{ name : 'target_type', 			index : 'target_type', 				align : "center",	sortable : true, 	width : (pageWidth*(7/100))		},
				{ name : 'l_evnt_title', 			index : 'l_evnt_title', 			align : "center",	sortable : false, 	width : (pageWidth*(15/100)),	classes:'pointer' },
				{ name : 'lst_custgp_nm', 			index : 'lst_custgp_nm', 			align : "center",	sortable : false, 	width : (pageWidth*(10/100))	},
				{ name : 'lst_custgp_id', 			index : 'lst_custgp_id', 			align : "center",	sortable : false, 	width : (pageWidth*(10/100))	},
				{ name : 'zone_mapp_cnt', 			index : 'zone_mapp_cnt',			align : "center",	sortable : true, 	width : (pageWidth*(7/100))		},
 				{ name : 'wake_up_yn_nm', 			index : 'wake_up_yn_nm', 			hidden : true, width : 0	},
				{ name : 'prgs_start_date', 		index : 'prgs_start_date', 			align : "center",	sortable : true, 	width : (pageWidth*(7/100))		},
				{ name : 'prgs_end_date', 			index : 'prgs_end_date', 			align : "center",	sortable : true, 	width : (pageWidth*(7/100))		}, 
				{ name : 'aprv_sts_cd_nm', 			index : 'aprv_sts_cd_nm', 			align : "center", 	sortable : false, 	width : (pageWidth*(7/100))		},				
				{ name : 'prgs_sts_cd_nm', 			index : 'prgs_sts_cd_nm',			align : "center",	sortable : false, 	width : (pageWidth*(7/100))		}, 
				{ name : 'reg_date', 				index : 'reg_date', 				align : "center",	sortable : false, 	width : (pageWidth*(7/100))		},
 				{ name : 'aprv_sts_cd', 			index : 'aprv_sts_cd', 				hidden : true, width : 0 }
			],
			jsonReader: {
				repeatitems : false,
				id : "l_event_id",
				root : 		function(obj){ return obj.data.pot_event_list; },		// 루트가 될 데이터 셋 명칭
				records : 	function(obj){ return obj.data.page_info.records; },	// 총 레코드 수
				page : 		function(obj){ return obj.data.page_info.page; }, 		// 현재 보여지는 페이지
				total : 	function(obj){ return obj.data.page_info.total; }		// 페이지 블럭수
			},	            
			serializeRowData: function (postData) { return encodeURI("params="+JSON.stringify(postData)); },
			serializeGridData: function(postData) {
				
				/* 기존 검색 조건 유지 부분 */
				var _search = $("#frmKeepData").find("input[name=_search]");
				var page = $("#frmKeepData").find("input[name=page]");
				var rows = $("#frmKeepData").find("input[name=rows]");
				var sidx = $("#frmKeepData").find("input[name=sidx]");
				var sord = $("#frmKeepData").find("input[name=sord]");
				
				/* SEARCH_INFO : 기존에 검색 조건 등록 */
				if(_search.val() == "true") {
					
					// 기존 검색 데이터 등록(특별한거는 따로 해야 함!)
					cf_keepDataLoader($("#frmKeepData"),$("#frmSearch"));
					
					// 검색 폼 데이터 추출 및 post data 등록
					var searchData = $("#frmSearch").serializeFormObject();	// 검색 폼 데이터 추출
					postData._search = true;
					$("#event_grid").jqGrid('setGridParam', {search: true});
					$("#event_grid").jqGrid('setGridParam', {'postData' : {'search_info':searchData} });
					f_addButton();
				}
				
				/* PAGE_INFO : 현재 정렬 정보 */
				if(sidx.val() != undefined) {
					postData.sidx = sidx.val();
					postData.sord = sord.val();	
				}
				
				/* PAGE_INFO : 현재 페이지 정보 */
				if(page.val() != undefined) {
					postData.page = parseInt(page.val());
				}
				
				/* PAGE_INFO : 페이지 아이템 정보 */
				if(rows.val() != undefined) {
					$("#event_grid_page_center").find(".ui-pg-selbox").val(rows.val()).attr("selected", "selected");
					postData.rows = parseInt(rows.val());
					$("#event_grid").jqGrid('setGridParam', {'rowNum' : parseInt(rows.val()) });
				}
				
				/*  기존 Keep Data 삭제 */
				$("#frmKeepData").empty();
				
				return encodeURI("params="+JSON.stringify(postData));
			},
			postData:{
				search_info: '', 
				empno: '${sessionScope.sessionEmpno}', 
				emp_l_str_cd: '${sessionScope.sessionStrCd}',
				hq_base_yn: '${sessionScope.sessionHqBaseYn}'
			},
			search : false,
			rowNum : 10,
			rowList : [10, 20, 30],
			pager : '#event_grid_page',
			sortname : 'reg_date',
			sortorder : "desc",
			toolbarfilter: true,
			viewrecords : true,
			viewsortcols : [true, 'vertical', true],  //param1: isShow Icon, param2: vertical or horizontal, param3: click position true는 버튼, false는 icon
			recordpos : "left",
			multiselect : true,
			multiboxonly: true,
			autowidth : true,
			height : 'auto',
			shrinkToFit : true,
			gridComplete: function(){ },
			// ID click event(row data view)
			onCellSelect: function(rowid, index, contents, event) {
			   if(index == 4) {
					$("#event_grid").jqGrid('setGridParam', {'postData' : {'l_event_id':rowid} });
					var postData = $('#event_grid').jqGrid("getGridParam", "postData");					
					var url = "/application/lpot/event/lpotEventRN.do";
					var method = "POST";
					cf_action(url, method, postData);
			   }
			},
			gridComplete: function() {
				var postData = $('#event_grid').jqGrid("getGridParam", "postData");
				$('#event_grid').jqGrid('setGridParam', {sortname: postData.sidx, sortorder: postData.sord});
				var sortObj = $('.ui-jqgrid-htable').find('#event_grid_'+postData.sidx);
				sortObj.attr('aria-selected','false');
				$('.ui-jqgrid-htable').find('span[sort=asc]').addClass('ui-state-disabled');
				$('.ui-jqgrid-htable').find('span[sort=desc]').addClass('ui-state-disabled');
				sortObj.find('span[sort='+postData.sord+']').removeClass('ui-state-disabled');
			},
			onSortCol: function(columnName, columnIndex, sortOrder) {
				//$('.s-ico').find("span[sort='asc']").addClass('ui-state-disabled');
				//$('.s-ico').find("span[sort='desc']").addClass('ui-state-disabled');
			}
		});
		jQuery("#event_grid").jqGrid('navGrid', "#event_grid_page", {
			edit : false, add : false, del : false, 
			search : false, refresh : false, view:false, position: 'right'
		});
		

		// -------------------------- 버튼 영역 시작 -------------------------- // 
		if('${sessionScope.menuAuth.D}' == 'Y') {
			jQuery("#event_grid").jqGrid('navButtonAdd','#event_grid_page',{
				caption: "삭제",
				id: "delete_button",
				buttonicon: "ui-icon-trash",
				onClickButton: function(){
					
					var select_ids = $(this).jqGrid('getGridParam', 'selarrrow');
					
					var aprv_cnt = 0;
					
					for(var i = 0; i < select_ids.length; i++) {
						var aprv_sts_cd = $('#event_grid').jqGrid('getCell', select_ids[i], 'aprv_sts_cd');
						if(aprv_sts_cd == 'APPROVE') {
							aprv_cnt++;	
						}
					}
					if(aprv_cnt > 0) {
						alert('승인상태의 이벤트는 삭제가 불가능합니다.');
						return;
					}

					if(select_ids.length < 1) {
						alert("삭제할 항목을 먼저 선택해 주십시오.");
					} else {
						if(confirm(select_ids.length + "개의 항목을 삭제하시겠습니까?")) {
							
							var data = {
								evnt_id_list : select_ids,
								empno: '${sessionScope.sessionEmpno}', 
								emp_str_cd: '${sessionScope.sessionStrCd}',
								hq_base_yn: '${sessionScope.sessionHqBaseYn}'
							};
							
							$.ajax({
								url: api_url + "/backoffice/lpot/event/delete",
								type: "POST",
								contentType: "application/json;charset=utf-8", // POST 일때만 사용
								async: false,
								cache: true,
								data: JSON.stringify(data),
								success: function(obj) {
									alert(obj.message);
									$("#event_grid").trigger("reloadGrid");
								},
								error: function(obj) {
							    	var serverObj = obj.responseJSON;
							    	alert("code:"+serverObj.code+"\n"+"message:"+cf_msg(serverObj.message)+"\n");
							    	return;
							    }
							});
						}
					}
				}
			});
		}
				
		if('${sessionScope.menuAuth.C}' == 'Y') {
			jQuery("#event_grid").jqGrid('navButtonAdd','#event_grid_page',{
				caption: "등록",
				id: "add_button",
				buttonicon: "ui-icon-plus",
				onClickButton: function(){
					var url = "/application/lpot/event/lpotEventWN.do";
					var method = "POST";
					var postData = $('#event_grid').jqGrid("getGridParam", "postData"); // 페이지 정보와 검색 정보를 들고 이동
					cf_action(url, method, postData);
				}
			});	
		}
		// -------------------------- 버튼 영역 종료 -------------------------- //

	  	$("#event_grid").gridCss();
	  	$("#event_grid_cb").css("border-left-width","0");
	  	$("#event_grid_cb").css("padding-left","4px");
	  	$("#jqgh_event_grid_cb").css("padding","7px 0");
	  	$("#event_grid_page_right").find(".ui-pg-table, .navtable").css("float","right");
	  			  
	    /* 그리드 리사이징 */
	    $(window).on('resize.jqGrid', function () {
			jQuery("#event_grid").jqGrid( 'setGridWidth', $("#target_event_grid").width() );
		});
	}
};

/* ============================================================================================
/* 페이지 셋업 (Don't remove!!!)
/* --------------------------------------------------------------------------------------------
/* 기본 페이지 사용 컴포넌트 호출 및 초기화 작업 진행 
/* ============================================================================================ */
pageSetUp();

/* ============================================================================================
/* 페이지 정보 설정 로드
/* --------------------------------------------------------------------------------------------
/* 컴포넌트 SCRIPT 파일 로드 및 페이지 정보 설정 SCRIPT 로드
/* ============================================================================================ */
loadScript("${pageContext.request.contextPath}/resources/js/plugin/jqgrid/grid.locale-en.min.js", pagefunction);
</script>