<%@page import="com.penta.backoffice.base.util.LangUtil"%>
<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@page import="java.util.Enumeration"%>

<section id="widget-grid" class="">
	<div class="row">
		<article class="col-sm-12 col-md-12 col-lg-12">
			<div class="jarviswidget jarviswidget-color-darken" id="wid-id-2" data-widget-editbutton="false" data-widget-deletebutton="false">
				<header>
					<span class="widget-icon"> <i class="fa fa-table"></i> </span>
					<h2>조회조건</h2>
				</header>
				<div>
					<div class="jarviswidget-editbox">
					</div>
					<div class="widget-body">
						<form class="form-horizontal" id="frmSearchZone">
							<input type="hidden" name="targetTbody" value="<%=LangUtil.replaceInjection(request.getParameter("targetTbody"))%>">
							<fieldset>
								<legend></legend>
								<div class="form-group">
									<label class="col-md-1 control-label">지점선택</label>
									<div class="col-md-3">
										<select class="form-control" name="str_cd">
											<option value="">전체</option>
										</select>
									</div>
									<label class="col-md-2 control-label cs-css-05">행사기간 : </label>
									<div class="col-md-3">
										<span class="form-control cs-css-03" id="rd_evt_term_dd" ></span>
										<input type="hidden" name="evt_start_dd">
										<input type="hidden" name="evt_end_dd">
									</div>
								</div>
								<div class="form-group">
									<label class="col-md-1 control-label">키워드</label>
									<div class="col-md-2">
										<select class="form-control" name="stype">
											<option value="" selected="selected">선택</option>
											<option value="zone_id">ZONE ID</option>
											<option value="zone_nm">ZONE 명</option>
										</select> 
									</div>
									
									<div class="col-md-5">
										<input class="form-control" type="text" name="sword" >
									</div>
								</div>
							</fieldset>
							<div class="form-actions">
								<div class="row">
									<div class="col-md-12">
										<a href="javascript:f_searchZone();" class="btn btn-primary">조회</a>
									</div>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
		</article>
	</div>
	<div class="row" id="beaconLL">
		<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
			<div class="jarviswidget jarviswidget-color-darken" id="wid-id-3" data-widget-editbutton="false" data-widget-deletebutton="false">
				<header>
					<span class="widget-icon"> <i class="fa fa-table"></i> </span>
					<h2> 조회결과 </h2>
				</header>
				<div>
					<div class="jarviswidget-editbox"></div>
					<div id="target_zone_grid" class="widget-body no-padding">
						<table id="zone_grid"></table>
						<div id="zone_grid_page"></div>
					</div>
				</div>
			</div>
		</article>
	</div>
</section>

<form id="searchData">
<%
	Enumeration<?> e = request.getParameterNames();
	while(e.hasMoreElements()){
		String key = (String)e.nextElement();
		String values[] = request.getParameterValues(key);
		for(int i = 0; i < values.length; i++) {
			out.println("<input type=\"hidden\" name=\""+LangUtil.replaceInjection(key)+"\" value=\""+LangUtil.replaceInjection(values[i])+"\" />\n");
		}
	}
%>
</form>

<script type="text/javascript">
function f_searchZone() {
	
	// 검색 폼 데이터 추출
	var searchData = $("#frmSearchZone").serializeFormObject();
	
	// 검색 사용 중으로 변경
	$("#zone_grid").jqGrid('setGridParam', {search: true});
	
	// 첫 페이지 셋팅
	$("#zone_grid").jqGrid('setGridParam', {page: 1});
	
	// setGridParam을 이용해서 postData에 새로 설정해준 postData의 search에 설정 후 그리드를 다시 불러온다.
	$("#zone_grid").jqGrid('setGridParam', {'postData' : {'search_info':searchData} }).trigger('reloadGrid');
}



/* ============================================================================================
/* 페이지 정보 설정
/* --------------------------------------------------------------------------------------------
/* 초기 설정 및 필요 UI 컴포넌트 셋팅
/* ============================================================================================ */
var dialog_pagefunction = function() {
	
	//초기데이터 로드 : 등록지점
	f_ajaxStrCdCode($('#frmSearchZone').find('select[name=str_cd]'));
	
	var searchDataStartDate = $('#searchData').find('input[name=evt_start_dd]').val(); 
	var searchDataEndDate = $('#searchData').find('input[name=evt_end_dd]').val();

	$('#rd_evt_term_dd').html(cf_cvtDateFormat(searchDataStartDate, 'yyyy-MM-dd') + " ~ " + cf_cvtDateFormat(searchDataEndDate, 'yyyy-MM-dd'));
	
	loadScript("${pageContext.request.contextPath}/resources/js/plugin/jqgrid/jquery.jqGrid.min.js", run_jqgrid_function);

	function run_jqgrid_function() {
		
		var pageWidth = $("#zone_grid").parent().width() - 100;
		
		jQuery("#zone_grid").jqGrid({
			url : api_url + "/backoffice/common/zone/choice/list",
			mtype: 'GET',
			datatype : "json",
			colNames : ['No.', '지점코드', '지점명', 'Zone ID', 'Zone 명', '비콘수'],
			colModel : [
				{ name : 'no', 				index : 'no', 				align : "center",	sortable : false, 	width : (pageWidth*(10/100))	},
				{ name : 'str_cd', 			index : 'str_cd', 			align : "center",	sortable : false, 	width : (pageWidth*(10/100))	}, 
				{ name : 'str_nm',			index : 'str_nm', 			align : "center",	sortable : false, 	width : (pageWidth*(30/100)) 	}, 
				{ name : 'zone_id', 		index : 'zone_id', 			align : "center", 	sortable : false, 	width : (pageWidth*(30/100)) 	}, 
				{ name : 'zone_nm', 		index : 'zone_nm', 			align : "center", 	sortable : false, 	width : (pageWidth*(30/100)) 	},
				{ name : 'link_bcon_cnt', 	index : 'link_bcon_cnt',	align : "center", 	sortable : false, 	width : (pageWidth*(30/100)) 	}
			],
			jsonReader: {
				repeatitems : false,
				id : "zone_id",
				root : 		function(obj){ return obj.data.zone_sel_list; },	// 루트가 될 데이터 셋 명칭
				records : 	function(obj){ return obj.data.page_info.records; },// 총 레코드 수
				page : 		function(obj){ return obj.data.page_info.page; }, 	// 현재 보여지는 페이지
				total : 	function(obj){ return obj.data.page_info.total; }	// 페이지 블럭수
			},
			serializeRowData: function (postData) { return encodeURI("params="+JSON.stringify(postData)); },
			serializeGridData: function (postData) { return encodeURI("params="+JSON.stringify(postData)); },
			postData:{ 
				search_info : '',
				empno: '${sessionScope.sessionEmpno}', 
				str_cd: '${sessionScope.sessionStrCd}',
				hq_base_yn: '${sessionScope.sessionHqBaseYn}',
				evt_start_dd: searchDataStartDate,
				evt_end_dd: searchDataEndDate
			},
			search : false,
			rowNum : 10,
			rowList : [10, 20, 30],
			pager : '#zone_grid_page',
			sortname : 'zone_id',
			sortorder : "asc",
			toolbarfilter: true,
			viewrecords : true,
			recordpos : "left",
			multiselect : true,
			multiboxonly: true,
			autowidth : true,
			height : 'auto',
			shrinkToFit : true
		});
		jQuery("#zone_grid").jqGrid('navGrid', "#zone_grid_page", {
			edit : false, add : false, del : false, 
			search : false, refresh : false, view:false, position: 'right'
		});
					
		// btn_add
		jQuery("#zone_grid").jqGrid('navButtonAdd','#zone_grid_page',{
			caption: "등록",
			id: "add_button",
			buttonicon: "ui-icon-plus",
			onClickButton: function(){
				var rowId = $(this).jqGrid('getGridParam', 'selarrrow');
				var appendTbody = $("#frmSearchZone").find("input[name=targetTbody]").val();
				
				var tr_row_cnt = rowId.length;
				
				if(tr_row_cnt > 1) {
					alert("상품등록은 1건만 가능 합니다.");
					return;
				}
				
				if( cf_getTrElementCount($("#"+appendTbody)) > 0 ) {
					alert("이미 등록하셨습니다.\n상품등록은 1건만 가능 합니다.");
					return;
				}
				
				if(appendTbody == 'mission_zone_tbody') {
					for(var i = 0; i < rowId.length; i++) {
						var zone_id_val = $(this).jqGrid('getCell', rowId[i], 'zone_id');
						var appendData = '';
						appendData += '<tr>';
						appendData += '	<td class="ta-c"><input type="checkbox" value="' + zone_id_val + '"></td>';
						appendData += "	<input type='hidden' data-array-always='true' name='"+appendTbody+"' value='"+zone_id_val+"'>";
						appendData += '	<td class="ta-c">' + $(this).jqGrid('getCell', rowId[i], 'str_cd') + '</td>';
						appendData += '	<td class="ta-c">' + $(this).jqGrid('getCell', rowId[i], 'str_nm') + '</td>';
						appendData += '	<td class="ta-c">' + zone_id_val + '</td>';
						appendData += '	<td class="ta-c">' + $(this).jqGrid('getCell', rowId[i], 'zone_nm') + '</td>';
						appendData += '	<td class="ta-c">' + $(this).jqGrid('getCell', rowId[i], 'link_bcon_cnt') + '</td>';
						appendData += "<td><input  name='evt_corn_nm_list' type='text' style='width: 100%'></td>";
						appendData += "</tr>";
						
						
						var duplication_cnt = 0;
						
						// 중복 체크 후 데이터 등록
						$("#"+appendTbody).find('input[type=checkbox]').each(function(){
							if( $(this).val() ==  zone_id_val ) {
								duplication_cnt++;
							}
						});
						if(duplication_cnt == 0) {
							$("#"+appendTbody).append(appendData);	
						}					
					}
				} 
				else {
					for(var i = 0; i < rowId.length; i++) {
						var zone_id_val = $(this).jqGrid('getCell', rowId[i], 'zone_id');
						var appendData = '';
						appendData += '<tr>';
						appendData += '	<td class="ta-c"><input type="checkbox" value="' + zone_id_val + '"></td>';
						appendData += "	<input type='hidden' name='zone_id' value='"+zone_id_val+"'>";
						appendData += '	<td class="ta-c">' + $(this).jqGrid('getCell', rowId[i], 'str_cd') + '</td>';
						appendData += '	<td class="ta-c">' + $(this).jqGrid('getCell', rowId[i], 'str_nm') + '</td>';
						appendData += '	<td class="ta-c">' + zone_id_val + '</td>';
						appendData += '	<td class="ta-c">' + $(this).jqGrid('getCell', rowId[i], 'zone_nm') + '</td>';
						appendData += '	<td class="ta-c">' + $(this).jqGrid('getCell', rowId[i], 'link_bcon_cnt') + '</td>';
						appendData += "</tr>";
						
						var duplication_cnt = 0;
						
						// 중복 체크 후 데이터 등록
						$("#"+appendTbody).find('input[type=checkbox]').each(function(){
							if( $(this).val() ==  zone_id_val ) {
								duplication_cnt++;
							}
						});
						if(duplication_cnt == 0) {
							$("#"+appendTbody).append(appendData);	
						}					
					}
				}
								
				
			}
		});	
		
		$("#zone_grid").gridCss();
	  	$("#zone_grid_cb").css("border-left-width","0");
	  	$("#zone_grid_cb").css("padding-left","4px");
	  	$("#jqgh_zone_grid_cb").css("padding","7px 0");
	  	$("#zone_grid_page_right").find(".ui-pg-table, .navtable").css("float","right");
	  
	    // auto resize grid
	    $(window).on('resize.jqGrid', function () {
			jQuery("#zone_grid").jqGrid( 'setGridWidth', $("#target_zone_grid").width() );
		});
	}
	
};


/* ============================================================================================
/* 페이지 셋업 (Don't remove!!!)
/* --------------------------------------------------------------------------------------------
/* 기본 페이지 사용 컴포넌트 호출 및 초기화 작업 진행 
/* ============================================================================================ */
pageSetUp();


/* ============================================================================================
/* 페이지 정보 설정 로드
/* --------------------------------------------------------------------------------------------
/* 컴포넌트 SCRIPT 파일 로드 및 페이지 정보 설정 SCRIPT 로드
/* ============================================================================================ */
loadScript('${pageContext.request.contextPath}/resources/js/plugin/jqgrid/grid.locale-en.min.js', dialog_pagefunction);
</script>