<%@page import="com.penta.backoffice.base.util.LangUtil"%>
<%@page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@page import="java.util.Enumeration"%>
<section id="widget-grid" class="">
	<div class="row">
		<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
			<div class="jarviswidget jarviswidget-color-darken" id="wid-id-1" data-widget-editbutton="false" data-widget-deletebutton="false">
				<header>
					<span class="widget-icon"> <i class="fa fa-table"></i> </span>
					<h2> 채널콕 카테고리 노출 순서 </h2>
				</header>
				<div>
					<div class="jarviswidget-editbox"></div>
					<div id="target_cate_set_grid" class="widget-body no-padding">
						<table id="cate_set_grid"></table>
						<div id="cate_set_grid_page"></div>
					</div>
				</div>
			</div>
		</article>
	</div>
</section>

<div id="category_nm_modify" style="display:none;"></div>

<form id="frmKeepData">
<%
	Enumeration<?> e = request.getParameterNames();
	while(e.hasMoreElements()){
		String key = (String)e.nextElement();
		String values[] = request.getParameterValues(key);
		for(int i = 0; i < values.length; i++) {
			out.println("<input type=\"hidden\" name=\""+LangUtil.replaceInjection(key)+"\" value=\""+LangUtil.replaceInjection(values[i])+"\" />\n");	
		}
	}
%>
</form>
<script type="text/javascript" src="${pageContext.request.contextPath}/resources/js/common_dialog_script.js"></script>
<script type="text/javascript">
/**
 * ==================================================================================
 * 채널콕 리스트 : 카테고리 이름변경 다이얼로그 호출
 * ==================================================================================
 */function f_chkokCategoryNameModifySD(_data){
	 _sd_data = _data;
	$.ajax({
		url		: "/application/chkok/chkokCategoryNameModifySD.do",
		type	: 'POST',
		cache	: false,
		data	: _data,
		success	: function(data){
			var $target = $('#category_nm_modify');
			$target.empty();
			$target.html(data);
		}
	});
	$('#category_nm_modify').dialog('open');
}
//--------------카테고리 이름변경 다이얼로그 화면 구문-----------------//
$('#category_nm_modify').dialog({
	autoOpen : false,
	width : 550,
	minHeight: 100,
	resizable : false,
	modal : true,
	title : "<div class='widget-header'><h6><i class='fa fa-pencil-square-o'></i> 카테고리 이름변경 </h6></div>",
});



/* ============================================================================================
/* 카테고리 순서 이동
/* ============================================================================================ */
function chk_category_order(obj){
	var row = obj.parents("tr:first");
	if (obj.hasClass("order_up")) {
		if(!row.prev().hasClass("jqgfirstrow"))
			row.insertBefore(row.prev());
	} else if (obj.hasClass("order_down")) {
		row.insertAfter(row.next());
	}
}


/* ============================================================================================
/* 페이지 정보 설정
/* --------------------------------------------------------------------------------------------
/* 초기 설정 및 필요 UI 컴포넌트 셋팅
/* ============================================================================================ */
var dialog_pagefunction = function(){
	_sd_data = "";
	loadScript("${pageContext.request.contextPath}/resources/js/plugin/jqgrid/grid.locale-en.min.js", chk_cate_set_grid_function);
	function chk_cate_set_grid_function() {
		
		var pageWidth = $("#cate_set_grid").parent().width() - 100;

		jQuery("#cate_set_grid").jqGrid({
			url : api_chkok_url+"/backoffice/chkok/category/list", 	
			mtype: 'GET',
			datatype : "json",
			colNames : ['No.', '카테고리', '카테고리 코드', '순서'], 
			colModel : [
				{ name : 'order_seq', 		index : 'order_seq',	align : 'center',	sortable : false, editable: true, 	width : (pageWidth*(1/100)) 	},
				{ name : 'category_nm', 	index : 'category_nm', 	align : 'center', 	sortable : false, 	width : (pageWidth*(20/100)), 
					editable:true, edittype: 'text', editoptions:{maxlength:"100"}	},
				{ name : 'category_cd', 	index : 'category_cd', 	hidden: true , key:true, 	width : 0	},
				{ name : 'order_seq_btn', 		index : 'order_seq_btn',	align : "center",	sortable : false, 	width : (pageWidth*(5/100)),
					  formatter: function(cellvalue, options, rowObject) {
						  var btn = 
						  		"<button class='cellbtn order_up' type='button' onclick='chk_category_order($(this));'>▲</button>&nbsp;"
						  		+ "<button class='cellbtn order_down' type='button' onclick='chk_category_order($(this));'>▼</button>&nbsp;"
						  return btn;
					  }
				}
			],
			jsonReader: {
				repeatitems : false,
				id : "category_cd",
				root : function(obj){ return obj.data.category_list; }	,		// 루트가 될 데이터 셋 명칭
			},
			serializeRowData: function (postData) { return encodeURI("params="+JSON.stringify(postData)); },
			serializeGridData: function(postData) {	return encodeURI("params="+JSON.stringify(postData)); },
			postData:{
				empno: '${sessionScope.sessionEmpno}', 
				rows: '10',
				page: '1'			
			},
			rowNum : -1,
// 			pager : '#cate_set_grid_page', //하단 페이징 위치 처리되지 않아 커멘트 처리, pager안의 버튼영역 그리드 밖(chkokLN.jsp)으로 이동. 
			sortname : 'order_seq',
			sortorder : 'asc',
			viewsortcols : [true, 'vertical',  true],  //param1: isShow Icon, param2: vertical or horizontal, param3: click position true는 버튼, false는 icon
			multiselect : true,
			multiboxonly: true,
			viewrecords : true,
			shrinkToFit : true,
			autowidth : true,
			height : 'auto',
			recordpos : "left",
			gridComplete: function() {	
				
				var records = $("#cate_set_grid").getGridParam("records");
				
				jQuery("#cate_set_grid").jqGrid( 'setGridWidth', $("#target_cate_set_grid").width() );
				
				var postData = $('#cate_set_grid').jqGrid("getGridParam", "postData");				
				$('#cate_set_grid').jqGrid('setGridParam', {sortname: postData.sidx, sortorder: postData.sord});
				var sortObj = $('.ui-jqgrid-htable').find('#cate_set_grid_'+postData.sidx);
				sortObj.attr('aria-selected','false');
				$('.ui-jqgrid-htable').find('span[sort=asc]').addClass('ui-state-disabled');
				$('.ui-jqgrid-htable').find('span[sort=desc]').addClass('ui-state-disabled');
				sortObj.find('span[sort='+postData.sord+']').removeClass('ui-state-disabled');
				
				
						
			}
		});
		
		jQuery("#cate_set_grid").jqGrid('navGrid', "#cate_set_grid_page", {
			edit : false, add : false, del : false, 
			search : false, refresh : false, view: false, position: 'right'
		});		


	  	$("#cate_set_grid").gridCss();
	  	$("#cate_set_grid_cb").css("border-left-width","0");
	  	$("#cate_set_grid_cb").css("padding-left","4px");
	  	$("#jqgh_cate_set_grid_cb").css("padding","7px 0");
	  	$("#cate_set_grid_page_right").find(".ui-pg-table, .navtable").css("float","right");
	  	
	  	/* 그리드 리사이징 */
	    $(window).on('resize.jqGrid', function () {
			jQuery("#cate_set_grid").jqGrid( 'setGridWidth', $("#target_chk_grid").width()-100);
		});
	}
	
};
/* ============================================================================================
/* 페이지 셋업 (Don't remove!!!)
/* --------------------------------------------------------------------------------------------
/* 기본 페이지 사용 컴포넌트 호출 및 초기화 작업 진행 
/* ============================================================================================ */
pageSetUp();


/* ============================================================================================
/* 페이지 정보 설정 로드
/* --------------------------------------------------------------------------------------------
/* 컴포넌트 SCRIPT 파일 로드 및 페이지 정보 설정 SCRIPT 로드
/* ============================================================================================ */
loadScript("${pageContext.request.contextPath}/resources/js/plugin/jqgrid/grid.locale-en.min.js", dialog_pagefunction);
</script>