<%@page import="com.penta.backoffice.base.util.LangUtil"%>
<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="java.util.Enumeration"%>
<section id="widget-grid" class="">
	<div class="row">
		<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
			<div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-0" data-widget-editbutton="false" data-widget-deletebutton="false">
				<header>
					<span class="widget-icon"> <i class="fa fa-search"></i> </span>
					<h2> 조회조건 </h2>
				</header>
				<div>
					<div class="jarviswidget-editbox"></div>
					<div class="widget-body">
						<form id="frmSearch" class="form-horizontal">
							<fieldset>
								<div class="form-group">
									<label class="col-md-1 control-label">등록지점</label>
									<div class="col-md-3">
										<select class="form-control" id="str_cd" name="str_cd">
											<option value="">전체</option>
										</select>
									</div>
									
									<label class="col-md-1 control-label">스탬프유형</label>
									<div class="col-md-3">
										<select class="form-control" name="stamp_divn_cd">
											<option value="">전체</option>
										</select>
									</div>
									
									<label class="col-md-1 control-label">승인상태</label>
									<div class="col-md-3">
										<select class="form-control" name="aprv_sts_cd">
											<option value="">전체</option>
										</select> 
									</div>
								</div>
								
								<div class="form-group">
									<label class="col-md-1 control-label">행사번호</label>
									<div class="col-md-3">
										<input class="form-control" type="text" name="stamp_id">
									</div>
									
									<label class="col-md-1 control-label">행사제목</label>
									<div class="col-md-3">
										<input class="form-control" type="text" name="evt_title">
									</div>
									
									<label class="col-md-1 control-label">행사시작일</label>
									<div class="col-md-3half">
										<div class="input-group">
											<input class="form-control datepicker pr12 tac" type="text" id="s_stamp_term_start_dd" name="s_stamp_term_start_dd" data-date-format="yyyyMMdd" data-dateformat='yy-mm-dd' placeholder="시작일">
											<span class="input-group-addon"><i class="fa fa-calendar"></i></span>
										</div>
									</div>
									<div class="col-md-3half">
										<div class="input-group">
											<input class="form-control datepicker pr12 tac" type="text" id="e_stamp_term_start_dd" name="e_stamp_term_start_dd" data-date-format="yyyyMMdd" data-dateformat='yy-mm-dd' placeholder="종료일">
											<span class="input-group-addon"><i class="fa fa-calendar"></i></span>
										</div>
									</div>
								</div>
								
								<div class="form-group">
									<label class="col-md-1 control-label">캠페인명</label>
									<div class="col-md-3">
										<input class="form-control" type="text" name="campaign_nm">
									</div>
									<label class="col-md-1 control-label">고객군명</label>
									<div class="col-md-3">
										<input class="form-control" type="text" name="custgp_nm">
									</div>
								</div>
							</fieldset>
							
							<div class="form-actions mt0">
								<div class="row">
									<div class="col-md-12">
										<a href="javascript:void(0)" id="btn_search" onclick="f_search();" class="btn btn-success"><i class="fa fa-search"></i> 조회 </a>
									</div>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
		</article>
	</div>
	<div class="row">
		<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
			<div class="jarviswidget jarviswidget-color-darken" id="wid-id-1" data-widget-editbutton="false" data-widget-deletebutton="false">
				<header>
					<span class="widget-icon"> <i class="fa fa-table"></i> </span>
					<h2> M스탬프 목록 </h2>
				</header>
				<div>
					<div class="jarviswidget-editbox"></div>
					<div id="target_stamp_grid" class="widget-body no-padding">
						<table id="stamp_grid"></table>
						<div id="stamp_grid_page"></div>
					</div>
				</div>
			</div>
		</article>
	</div>
</section>

<form id="frmKeepData">
<%
	Enumeration<?> e = request.getParameterNames();
	while(e.hasMoreElements()){
		String key = (String)e.nextElement();
		String values[] = request.getParameterValues(key);
		for(int i = 0; i < values.length; i++) {
			out.println("<input type=\"hidden\" name=\""+LangUtil.replaceInjection(key)+"\" value=\""+LangUtil.replaceInjection(values[i])+"\" />\n");	
		}
	}
%>
</form>


<script type="text/javascript">
/**
 * ==================================================================================
 * 리스트 화면 : 달력 포멧 사용 정의
 * ==================================================================================
 */
$('#s_stamp_term_start_dd').datepicker(
    $.extend({
        onSelect: function(selected) {
            $("#e_stamp_term_start_dd").datepicker('option','minDate', selected);
        }
    }, date_opts)
);
$('#e_stamp_term_start_dd').datepicker(
    $.extend({
        onSelect: function(selected) {
            $("#s_stamp_term_start_dd").datepicker('option','maxDate', selected);
        }
    }, date_opts)
);
/* ============================================================================================
/* 페이지 정보 설정
/* --------------------------------------------------------------------------------------------
/* 초기 설정 및 필요 UI 컴포넌트 셋팅
/* ============================================================================================ */
var pagefunction = function() {

	// 등록지점 호출
	f_ajaxStrCdCode($("#str_cd"));
	
	// 초기데이터 로드 : 스탬프유형
	f_ajaxStampTypeCode($("select[name=stamp_divn_cd]"));
	
	// 초기데이터 로드 : 승인상태
	f_ajaxApprovalStatusCode($("select[name=aprv_sts_cd]"));

	loadScript("${pageContext.request.contextPath}/resources/js/plugin/jqgrid/jquery.jqGrid.min.js", run_jqgrid_function);

	function run_jqgrid_function() {
		
		var pageWidth = $("#stamp_grid").parent().width() - 100;

		jQuery("#stamp_grid").jqGrid({
			url : api_url+"/backoffice/stamp/list",
			mtype: 'GET',
			datatype : "json",
			colNames : ['No.', '등록지점', '유형',/*'행사번호',*/ '행사제목', '캠페인명', '고객군명', '행사시작일', '행사종료일',/*'행사지점', '미션유형',*/ '승인상태', '진행상태', '참여인원', '등록일자', '승인코드' ],
			colModel : [
				{ name : 'rnum', 					index : 'rnum',		 				align : "center",	sortable : false, 	width : (pageWidth*(4/100)) 	},
				{ name : 'str_nm', 					index : 'str_nm', 					align : "center",	sortable : false, 	width : (pageWidth*(5/100))		},
				{ name : 'stamp_divn_cd_name', 		index : 'stamp_divn_cd_name', 		align : "center",	sortable : false, 	width : (pageWidth*(8/100))		}, 
				/* { name : 'stamp_id', 				index : 'stamp_id', 				align : "center",	sortable : false, 	width : (pageWidth*(10/100))	}, */ 
				{ name : 'evt_title', 				index : 'evt_title', 				align : "center", 	sortable : false, 	width : (pageWidth*(25/100)), 	classes:'pointer' },
				
				{ name : 'campaign_nm', 			index : 'campaign_nm', 				align : "center",	sortable : false, 	width : (pageWidth*(10/100))	}, 
				{ name : 'custgp_nm', 				index : 'custgp_nm', 				align : "center",	sortable : false, 	width : (pageWidth*(10/100))	}, 
				
				
				{ name : 'evt_term_start_dd', 		index : 'evt_term_start_dd', 		align : "center", 	sortable : true, 	width : (pageWidth*(5/100)),
					formatter: function(cellvalue, options, rowObject) {
						return cf_cvtDateFormat(cellvalue,'yyyy-MM-dd');
					}
				}, 
				{ name : 'evt_term_end_dd', 		index : 'evt_term_end_dd', 			align : "center", 	sortable : true, 	width : (pageWidth*(5/100)),
					formatter: function(cellvalue, options, rowObject) {
						return cf_cvtDateFormat(cellvalue,'yyyy-MM-dd');
					}
				},
			/*	{ name : 'str_mst_cnt', 			index : 'str_mst_cnt',	 			align : "center", 	sortable : false, 	width : (pageWidth*(5/100)) 	}, */
			/*	{ name : 'stamp_apply_to_cd_name', 	index : 'stamp_apply_to_cd_name',	align : "center", 	sortable : false, 	width : (pageWidth*(10/100)),
					formatter: function(cellvalue, options, rowObject) {
						var rtnstr = "";
						if(rowObject.stamp_apply_to_cd_name1 != null && rowObject.stamp_apply_to_cd_name1 != '') {
							rtnstr = "1."+rowObject.stamp_apply_to_cd_name1;
						}
						if(rowObject.stamp_apply_to_cd_name2 != null && rowObject.stamp_apply_to_cd_name2 != '') {
							if(rtnstr != "") {
								rtnstr = rtnstr + "<br>" + "2."+rowObject.stamp_apply_to_cd_name2;
							} else {
								rtnstr = "1."+rowObject.stamp_apply_to_cd_name2;
							}	
						}
	                	return rtnstr;
	            	}
				}, */
				{ name : 'aprv_sts_cd_name', 		index : 'aprv_sts_cd_name', 		align : "center", 	sortable : false, 	width : (pageWidth*(4/100)) 	},
				{ name : 'prgs_sts_cd_name', 		index : 'prgs_sts_cd_name', 		align : "center", 	sortable : false, 	width : (pageWidth*(4/100)) 	},
				{ name : 'stamp_card_issue_cnt',	index : 'stamp_card_issue_cnt',		align : "center", 	sortable : true, 	width : (pageWidth*(6/100)) 	},
				{ name : 'reg_date', 				index : 'reg_date', 				align : "center", 	sortable : false, 	width : (pageWidth*(6/100)) 	},
				{ name : 'aprv_sts_cd', index : 'aprv_sts_cd', hidden : true, width : 0 }

			],
			jsonReader: {
				repeatitems : false,
				id : "stamp_id",
				root : 		function(obj){ return obj.data.stamp_list; },			// 루트가 될 데이터 셋 명칭
				records : 	function(obj){ return obj.data.page_info.records; },	// 총 레코드 수
				page : 		function(obj){ return obj.data.page_info.page; }, 		// 현재 보여지는 페이지
				total : 	function(obj){ return obj.data.page_info.total; }		// 페이지 블럭수
			},	            
			serializeRowData: function (postData) { return encodeURI("params="+JSON.stringify(postData)); },
			serializeGridData: function(postData) {
				
				/* 기존 검색 조건 유지 부분 */
				var _search = $("#frmKeepData").find("input[name=_search]");
				var page = $("#frmKeepData").find("input[name=page]");
				var rows = $("#frmKeepData").find("input[name=rows]");
				var sidx = $("#frmKeepData").find("input[name=sidx]");
				var sord = $("#frmKeepData").find("input[name=sord]");
				
				/* SEARCH_INFO : 기존에 검색 조건 등록 */
				if(_search.val() == "true") {
					
					// 기존 검색 데이터 등록(특별한거는 따로 해야 함!)
					cf_keepDataLoader($("#frmKeepData"),$("#frmSearch"));
					
					// 검색 폼 데이터 추출 및 post data 등록
					var searchData = $("#frmSearch").serializeFormObject();	// 검색 폼 데이터 추출
					postData._search = true;
					$("#stamp_grid").jqGrid('setGridParam', {search: true});
					$("#stamp_grid").jqGrid('setGridParam', {'postData' : {'search_info':searchData} });
					f_addButton();
				}
				
				/* PAGE_INFO : 현재 정렬 정보 */
				if(sidx.val() != undefined) {
					postData.sidx = sidx.val();
					postData.sord = sord.val();	
					//$('#stamp_grid_'+sidx.val()).find('.s-ico').hide();
					/* $('.ui-jqgrid-htable').find('th[aria-selected=true]').attr('aria-selected','false');
					
					var sortObj = $('.ui-jqgrid-htable').find('#stamp_grid_'+sidx.val());
					sortObj.attr('aria-selected','true');
					
					//sortObj.find('.s-ico').show();
					sortObj.find('span[sort='+sord.val()+']').removeClass('ui-state-disabled'); */
				}
				
				/* PAGE_INFO : 현재 페이지 정보 */
				if(page.val() != undefined) {
					postData.page = parseInt(page.val());
				}
				
				/* PAGE_INFO : 페이지 아이템 정보 */
				if(rows.val() != undefined) {
					$("#stamp_grid_page_center").find(".ui-pg-selbox").val(rows.val()).attr("selected", "selected");
					postData.rows = parseInt(rows.val());
					$("#stamp_grid").jqGrid('setGridParam', {'rowNum' : parseInt(rows.val()) });
				}
				
				/*  기존 Keep Data 삭제 */
				$("#frmKeepData").empty();
				
				return encodeURI("params="+JSON.stringify(postData));
			},
			postData:{ 
				search_info: '', 
				empno: '${sessionScope.sessionEmpno}', 
				emp_str_cd: '${sessionScope.sessionStrCd}',
				hq_base_yn: '${sessionScope.sessionHqBaseYn}'
			},
			search : false,
			rowNum : 10,
			rowList : [10, 20, 30],
			pager : '#stamp_grid_page',
			sortname : 'reg_date',
			sortorder : "desc",
			toolbarfilter: true,
			viewrecords : true,
			viewsortcols : [true, 'vertical', true],  //param1: isShow Icon, param2: vertical or horizontal, param3: click position true는 버튼, false는 icon
			recordpos : "left",
			multiselect : true,
			multiboxonly: true,
			autowidth : true,
			height : 'auto',
			shrinkToFit : true,
			gridComplete: function(){ },
			// ID click event(row data view)
			onCellSelect: function(rowid, index, contents, event) {
			   if(index == 4) {
					$("#stamp_grid").jqGrid('setGridParam', {'postData' : {'stamp_id':rowid} });
					var postData = $('#stamp_grid').jqGrid("getGridParam", "postData"); // 페이지 정보와 검색 정보를 들고 이동
					
					var url = "/application/stamp/stamp/stampRN.do";
					var method = "POST";
					cf_action(url, method, postData);
			   }
			},
			gridComplete: function() {
				
				/* console.log("postData.sidx : " + postData.sidx);
				var sortObj = $('.ui-jqgrid-htable').find('#stamp_grid_'+postData.sidx);
				sortObj.attr('aria-selected','false');
				sortObj.find('span[sort='+postData.sord+']').removeClass('ui-state-disabled'); */
				
				var postData = $('#stamp_grid').jqGrid("getGridParam", "postData");
				$('#stamp_grid').jqGrid('setGridParam', {sortname: postData.sidx, sortorder: postData.sord});
				var sortObj = $('.ui-jqgrid-htable').find('#stamp_grid_'+postData.sidx);
				sortObj.attr('aria-selected','false');
				$('.ui-jqgrid-htable').find('span[sort=asc]').addClass('ui-state-disabled');
				$('.ui-jqgrid-htable').find('span[sort=desc]').addClass('ui-state-disabled');
				sortObj.find('span[sort='+postData.sord+']').removeClass('ui-state-disabled');
			},
			onSortCol: function(columnName, columnIndex, sortOrder) {
				//$('.s-ico').find("span[sort='asc']").addClass('ui-state-disabled');
				//$('.s-ico').find("span[sort='desc']").addClass('ui-state-disabled');
			}
		});
		jQuery("#stamp_grid").jqGrid('navGrid', "#stamp_grid_page", {
			edit : false, add : false, del : false, 
			search : false, refresh : false, view:false, position: 'right'
		});
		

		// -------------------------- 버튼 영역 시작 -------------------------- // 
		if('${sessionScope.menuAuth.D}' == 'Y') {
			jQuery("#stamp_grid").jqGrid('navButtonAdd','#stamp_grid_page',{
				caption: "삭제",
				id: "delete_button",
				buttonicon: "ui-icon-trash",
				onClickButton: function(){ 
					var select_ids = $(this).jqGrid('getGridParam', 'selarrrow');
					var aprv_cnt = 0;
					
					for(var i = 0; i < select_ids.length; i++) {
						var aprv_sts_cd = $('#stamp_grid').jqGrid('getCell', select_ids[i], 'aprv_sts_cd');
						if(aprv_sts_cd == 'APPROVE') {
							aprv_cnt++;	
						}
					}
					if(aprv_cnt > 0) {
						/* alert('승인상태의 스탬프는 삭제가 불가능합니다.'); */
						alert('승인된 건은 삭제할 수 없습니다.');
						$("#stamp_grid").trigger("reloadGrid");
						return;
					}
					if(select_ids.length < 1) {
						alert("삭제할 스탬프를 먼저 선택해 주십시오.");
					} else {
						if(confirm(select_ids.length + "개의 스탬프를 삭제하시겠습니까?")) {
							
							var data = {
								stamp_id_list : select_ids,
								empno: '${sessionScope.sessionEmpno}', 
								emp_str_cd: '${sessionScope.sessionStrCd}',
								hq_base_yn: '${sessionScope.sessionHqBaseYn}'
							};
							
							$.ajax({
								url: api_url + "/backoffice/stamp/delete",
								type: "POST",
								contentType: "application/json;charset=utf-8", // POST 일때만 사용
								async: false,
								cache: true,
								data: JSON.stringify(data),
								success: function(obj) {
									alert(obj.message);
									$("#stamp_grid").trigger("reloadGrid");
								},
							    error: function(obj) {
							    	var serverObj = obj.responseJSON;
							    	alert("code:"+serverObj.code+"\n"+"message:"+cf_msg(serverObj.message)+"\n");
							    	return;
							    }
							});
						}
					}
				}
			});
		}
		
		if('${sessionScope.menuAuth.C}' == 'Y') {
			jQuery("#stamp_grid").jqGrid('navButtonAdd','#stamp_grid_page',{
				caption: "등록",
				id: "add_button",
				buttonicon: "ui-icon-plus",
				onClickButton: function(){
					var url = "/application/stamp/stamp/stampWN.do";
					var method = "POST";
					var postData = $('#stamp_grid').jqGrid("getGridParam", "postData"); // 페이지 정보와 검색 정보를 들고 이동
					cf_action(url, method, postData);
				}
			});
		}
		// -------------------------- 버튼 영역 종료 -------------------------- //

	  	$("#stamp_grid").gridCss();
	  	$("#stamp_grid_cb").css("border-left-width","0");
	  	$("#stamp_grid_cb").css("padding-left","4px");
	  	$("#jqgh_stamp_grid_cb").css("padding","7px 0");
	  	$("#stamp_grid_page_right").find(".ui-pg-table, .navtable").css("float","right");
	  			  
	    /* 그리드 리사이징 */
	    $(window).on('resize.jqGrid', function () {
			jQuery("#stamp_grid").jqGrid( 'setGridWidth', $("#target_stamp_grid").width() );
		});
	}
};

/* ============================================================================================
/* 페이지 셋업 (Don't remove!!!)
/* --------------------------------------------------------------------------------------------
/* 기본 페이지 사용 컴포넌트 호출 및 초기화 작업 진행 
/* ============================================================================================ */
pageSetUp();

/* ============================================================================================
/* 페이지 정보 설정 로드
/* --------------------------------------------------------------------------------------------
/* 컴포넌트 SCRIPT 파일 로드 및 페이지 정보 설정 SCRIPT 로드
/* ============================================================================================ */
loadScript("${pageContext.request.contextPath}/resources/js/plugin/jqgrid/grid.locale-en.min.js", pagefunction);
</script>
